(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{335:function(t,e,s){"use strict";s.r(e);var a=s(14),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"migration-from-objection-2-x-to-3-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#migration-from-objection-2-x-to-3-0"}},[t._v("#")]),t._v(" Migration from objection 2.x to 3.0")]),t._v(" "),e("p",[t._v("This document guides you through each breaking change in objection 3.0 and attempts to provide clear steps to follow. If you find something missing, please open an issue and we'll fix this guide ASAP.")]),t._v(" "),e("p",[t._v("Here's a list of the breaking changes")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#dropped-support-for-node-12"}},[t._v("Dropped support for node < 12")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#dropped-support-for-knex-0-95"}},[t._v("Dropped support for knex < 0.95")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#typescript-methods-like-findbyid-and-findone-that-return-a-single-item-are-now-typed-correctly"}},[t._v("typescript: Methods like "),e("code",[t._v("findById")]),t._v(" and "),e("code",[t._v("findOne")]),t._v(" that return a single item are now typed correctly")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#typescript-querybuilder-now-inherits-promiselike-instead-of-promise"}},[t._v("typescript: "),e("code",[t._v("QueryBuilder")]),t._v(" now inherits "),e("code",[t._v("PromiseLike")]),t._v(" instead of "),e("code",[t._v("Promise")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#dropped-a-bunch-of-deprecated-methods-and-features"}},[t._v("Dropped a bunch of deprecated methods and features")])])]),t._v(" "),e("h2",{attrs:{id:"dropped-support-for-node-12"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dropped-support-for-node-12"}},[t._v("#")]),t._v(" Dropped support for node < 12")]),t._v(" "),e("p",[t._v("Objection 3.0 needs at least node 12 to work.")]),t._v(" "),e("h2",{attrs:{id:"dropped-support-for-knex-0-95"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dropped-support-for-knex-0-95"}},[t._v("#")]),t._v(" Dropped support for knex < 0.95")]),t._v(" "),e("p",[t._v("Objection needs at least knex 0.95.0 to work.")]),t._v(" "),e("p",[t._v("This is because knex introduced some breaking changes in 0.95.0.")]),t._v(" "),e("h2",{attrs:{id:"typescript-methods-like-findbyid-and-findone-that-return-a-single-item-are-now-typed-correctly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-methods-like-findbyid-and-findone-that-return-a-single-item-are-now-typed-correctly"}},[t._v("#")]),t._v(" typescript: Methods like "),e("code",[t._v("findById")]),t._v(" and "),e("code",[t._v("findOne")]),t._v(" that return a single item are now typed correctly")]),t._v(" "),e("p",[t._v("In 2.0 methods like "),e("code",[t._v("findById")]),t._v(", "),e("code",[t._v("findOne")]),t._v(" and "),e("code",[t._v("first")]),t._v(" that return one item or undefined were incorrectly typed\nto always return a value. Now the return type of those methods is "),e("code",[t._v("SomeModel | undefined")]),t._v(".")]),t._v(" "),e("p",[t._v("You'll get compilation errors in places where you've trusted the old typings. All you need to do is to add a\ncheck for undefined values to narrow down the type or chain the "),e("code",[t._v("throwIfNotFound")]),t._v(" method that also narrows\ndown the type back to "),e("code",[t._v("SomeModel")]),t._v(".")]),t._v(" "),e("p",[t._v("Before:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("After:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Person not found'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Or")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("throwIfNotFound")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"typescript-querybuilder-now-inherits-promiselike-instead-of-promise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-querybuilder-now-inherits-promiselike-instead-of-promise"}},[t._v("#")]),t._v(" typescript: "),e("code",[t._v("QueryBuilder")]),t._v(" now inherits "),e("code",[t._v("PromiseLike")]),t._v(" instead of "),e("code",[t._v("Promise")])]),t._v(" "),e("p",[t._v("In 2.0 and before, the "),e("code",[t._v("QueryBuilder")]),t._v(" class inherited "),e("code",[t._v("Promise")]),t._v(" in the typings which made code like this possible")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findPerson")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Person"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("However, "),e("code",[t._v("QueryBuilder")]),t._v(" doesn't actually inherit "),e("code",[t._v("Promise")]),t._v(' but instead is "thenable". Typescript has the type\n'),e("code",[t._v("PromiseLike")]),t._v(" for thenable objects which objection now correctly uses. There are couple of ways to fix the\ncompilation errors this change causes:")]),t._v(" "),e("ol",[e("li",[t._v("Chain "),e("code",[t._v("execute")]),t._v(" to the query:")])]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findPerson")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Person"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Use "),e("code",[t._v("PromiseLike")]),t._v(":")])]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findPerson")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" PromiseLike"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Person"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("Make the functions "),e("code",[t._v("async")]),t._v(":")])]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findPerson")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Person"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"dropped-a-bunch-of-deprecated-methods-and-features"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dropped-a-bunch-of-deprecated-methods-and-features"}},[t._v("#")]),t._v(" Dropped a bunch of deprecated methods and features")]),t._v(" "),e("p",[t._v("All the methods that were marked deprecated (and printed a deprection message during runtime) in 2.0 have\nnow been removed.")]),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("h1",{attrs:{id:"migration-from-objection-1-x-to-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#migration-from-objection-1-x-to-2-0"}},[t._v("#")]),t._v(" Migration from objection 1.x to 2.0")]),t._v(" "),e("p",[t._v("Objection 2.0 brought a lot of great new features, but the main focus was in cleaning the API, which lead to a bunch of breaking changes. This document guides you through each change and attempts to provide clear steps to follow. If you find something missing, please open an issue and we'll fix this guide ASAP.")]),t._v(" "),e("p",[t._v("Here's a list of the breaking changes")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#node-6-and-7-are-no-longer-supported"}},[t._v("Node 6 and 7 are no longer supported")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#modify-method-signature-change"}},[t._v("modify method signature change")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#bluebird-and-lodash-have-been-removed"}},[t._v("Bluebird and lodash have been removed")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#database-errors-now-come-from-the-db-errors-library"}},[t._v("Database errors now come from db-errors library")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#ref-references-in-insertgraph-and-upsertgraph-now-require-the-allowrefs-true-option"}},[t._v("#ref references in insertGraph and upsertGraph now require the allowRefs: true option")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#relate-method-now-always-returns-the-number-of-affected-rows"}},[t._v("relate method now always returns the number of affected rows")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#relatedquery-no-longer-mutates"}},[t._v("$relatedQuery no longer mutates")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#context-now-acts-like-mergecontext"}},[t._v("context now acts like mergeContext")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#model-raw-and-model-fn-now-return-objection-raw-and-fn"}},[t._v("Model.raw and Model.fn now return objection raw and fn")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#querybuilder-tostring-and-querybuilder-tosql-have-been-removed"}},[t._v("QueryBuilder.toString and QueryBuilder.toSql have been removed")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#rewritten-typings"}},[t._v("Rewritten typings")])])]),t._v(" "),e("p",[t._v("In addition to these, "),e("strong",[t._v("a lot")]),t._v(" of methods were deprecated and replaced by a new method. The old methods still work, but they print a warning (once per process) when you use them. The warning message tells which method you should be using in the future and you can slowly replace the methods as you get annoyed by the warnings.")]),t._v(" "),e("p",[t._v("Most of the methods have simply been renamed, but in some cases the replacing methods work a little differently. Make sure to read the documentation of the new method.")]),t._v(" "),e("h2",{attrs:{id:"node-6-and-7-are-no-longer-supported"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-6-and-7-are-no-longer-supported"}},[t._v("#")]),t._v(" Node 6 and 7 are no longer supported")]),t._v(" "),e("p",[t._v("Objection now needs at least node 8 to work.")]),t._v(" "),e("h2",{attrs:{id:"modify-method-signature-change"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modify-method-signature-change"}},[t._v("#")]),t._v(" "),e("code",[t._v("modify")]),t._v(" method signature change")]),t._v(" "),e("p",[t._v("Before, you were able to provide multiple modifiers or modifier names to "),e("code",[t._v("modify")]),t._v(" by providing multiple arguments like this:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Now only the first argument is used to specify modifiers and all the rest are arguments for the modifiers. The first argument can be an array so you can simply wrap the modifiers in an array if there are more than one of them:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"bluebird-and-lodash-have-been-removed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bluebird-and-lodash-have-been-removed"}},[t._v("#")]),t._v(" Bluebird and lodash have been removed")]),t._v(" "),e("p",[t._v("Before, all async operations returned a bluebird promise. Now the bluebird dependency has been dropped and the native "),e("code",[t._v("Promise")]),t._v(" is used instead. This also means that all bluebird-specific methods")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("map")])]),t._v(" "),e("li",[e("code",[t._v("reduce")])]),t._v(" "),e("li",[e("code",[t._v("reflect")])]),t._v(" "),e("li",[e("code",[t._v("bind")])]),t._v(" "),e("li",[e("code",[t._v("spread")])]),t._v(" "),e("li",[e("code",[t._v("asCallback")])]),t._v(" "),e("li",[e("code",[t._v("nodeify")])])]),t._v(" "),e("p",[t._v("have been removed from the "),e("code",[t._v("QueryBuilder")]),t._v(".")]),t._v(" "),e("p",[t._v("You need to go through your code and make sure you don't use any bluebird methods or trust that objection returns a bluebird promise.")]),t._v(" "),e("p",[t._v("Objection also used to export "),e("code",[t._v("Promise")]),t._v(" and "),e("code",[t._v("lodash")]),t._v(" properties like this:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lodash "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'objection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("which is not true anymore. Both of those exports have been removed.")]),t._v(" "),e("h2",{attrs:{id:"database-errors-now-come-from-the-db-errors-library"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#database-errors-now-come-from-the-db-errors-library"}},[t._v("#")]),t._v(" Database errors now come from the db-errors library")]),t._v(" "),e("p",[t._v("Before, when a database operation failed, objection simply passed through the native error thrown by the database client. In 2.0 the errors are wrapped using the "),e("a",{attrs:{href:"https://github.com/Vincit/db-errors",target:"_blank",rel:"noopener noreferrer"}},[t._v("db-errors"),e("OutboundLink")],1),t._v(" library.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("db-errors")]),t._v(" library errors expose a "),e("code",[t._v("nativeError")]),t._v(" property. If you rely on the properties of the old errors, you can simply change code like this")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13514")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("into this:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  err "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nativeError "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" err\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13514")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("A preferred way to handle this would be to use the new "),e("code",[t._v("db-error")]),t._v(" classes as described "),e("RouterLink",{attrs:{to:"/recipes/error-handling.html#error-handling"}},[t._v("here")]),t._v(", but the fastest migration path is to do the above trick.")],1),t._v(" "),e("h2",{attrs:{id:"ref-references-in-insertgraph-and-upsertgraph-now-require-the-allowrefs-true-option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ref-references-in-insertgraph-and-upsertgraph-now-require-the-allowrefs-true-option"}},[t._v("#")]),t._v(" #ref references in insertGraph and upsertGraph now require the allowRefs: true option")]),t._v(" "),e("p",[t._v("The usage of "),e("code",[t._v("'#ref': 'someId'")]),t._v(" and "),e("code",[t._v("#ref{someId.someProp}")]),t._v(" now requires an explicit "),e("code",[t._v("allowRefs: true")]),t._v(" option to be passed to the called method:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Person"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertGraph")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("graphWithRefs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowRefs")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("This change was made for security reasons. An attacker could, in theory, use a "),e("code",[t._v("#ref{someId.someProperty}")]),t._v(" reference to access for example the password hash of a user:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" graphUpsertSentByTheAttacker "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("user")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13431")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'#id'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("movie")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#ref{user.passwordHash}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("and then the attacker could just take the password hash out of the movies's name in a client of some sort.")]),t._v(" "),e("p",[t._v("For this attack to work, the attacker must already have an access to the API that modifies the user's information. Additionally and more importantly, the graph described above (and all other graphs I could think of) would only yield the password hash in the movie's name "),e("strong",[t._v("if the program sets the hash to the graph before the "),e("code",[t._v("upsertGraph")]),t._v(" call is executed")]),t._v(". This is a highly unlikely scenario and in case of passowords, would require the attacker to be able to access a route that changes the user's password. The reference can never access the property in the database, only in the object itself.")]),t._v(" "),e("p",[t._v("Even though there's very little chance this kind of attack could be carried out at the moment, I'd advice you to never use "),e("code",[t._v("upsertGraph")]),t._v(" with "),e("code",[t._v("{ allowRefs: true }")]),t._v(" and unvalidated user input with references!")]),t._v(" "),e("h2",{attrs:{id:"relate-method-now-always-returns-the-number-of-affected-rows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#relate-method-now-always-returns-the-number-of-affected-rows"}},[t._v("#")]),t._v(" relate method now always returns the number of affected rows")]),t._v(" "),e("p",[e("code",[t._v("relate")]),t._v(" used to return the inserted pivot table row in case of "),e("code",[t._v("ManyToManyRelation")]),t._v(" and the number of updated rows in case of other relations. Now an integer indicating the number of affected rows is always returned.")]),t._v(" "),e("p",[t._v("You need to go through your code and check how the return values of "),e("code",[t._v("relate")]),t._v(" queries are used.")]),t._v(" "),e("h2",{attrs:{id:"relatedquery-no-longer-mutates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#relatedquery-no-longer-mutates"}},[t._v("#")]),t._v(" $relatedQuery no longer mutates")]),t._v(" "),e("p",[t._v("With objection 1.x, doing this")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" somePerson"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$relatedQuery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pets'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("added a property "),e("code",[t._v("pets")]),t._v(" for "),e("code",[t._v("somePerson")]),t._v(" and saved the result there. This no longer happens with objection 2. Also inserting a new item using")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" somePerson"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$relatedQuery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pets'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("would previously add the inserted pet to the "),e("code",[t._v("pets")]),t._v(" array of "),e("code",[t._v("somePerson")]),t._v(". This also no longer happens.")]),t._v(" "),e("p",[t._v("You can use "),e("code",[t._v("withGraphFetched")]),t._v(" and "),e("code",[t._v("fetchGraph")]),t._v(" methods if you want to populate the relations. Also, nothing prevents you from doing this:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("somePerson"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pets "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" somePerson"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$relatedQuery")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pets'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("You can also use the "),e("code",[t._v("Model.relatedInsertQueryMutates")]),t._v(" and "),e("code",[t._v("Model.relatedFindQueryMutates")]),t._v(" properties to revert back to 1.x behavior. Note that those properties are now deprecated and will be removed in 3.0.")]),t._v(" "),e("h2",{attrs:{id:"context-now-acts-like-mergecontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context-now-acts-like-mergecontext"}},[t._v("#")]),t._v(" context() now acts like mergeContext()")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("context")]),t._v(" method of "),e("code",[t._v("QueryBuilder")]),t._v(" now merges the given object with the current context object instead of replacing it. You can use "),e("code",[t._v("clearContext")]),t._v(" to clear the context if you need the old behaviour.")]),t._v(" "),e("h2",{attrs:{id:"model-raw-and-model-fn-now-return-objection-raw-and-fn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#model-raw-and-model-fn-now-return-objection-raw-and-fn"}},[t._v("#")]),t._v(" Model.raw and Model.fn now return objection raw and fn")]),t._v(" "),e("p",[t._v("Previously "),e("code",[t._v("Model.raw")]),t._v(" returned a knex raw builder and "),e("code",[t._v("Model.fn")]),t._v(" returned a knex "),e("code",[t._v("FunctionHelper")]),t._v(" instance. In 2.0 objection's "),e("RouterLink",{attrs:{to:"/api/objection/#raw"}},[t._v("raw")]),t._v(" and "),e("RouterLink",{attrs:{to:"/api/objection/#fn"}},[t._v("fn")]),t._v(" helpers are returned. To get a knex "),e("code",[t._v("raw")]),t._v(" builder, you need to use "),e("code",[t._v("knex.raw")]),t._v(" directly.")],1),t._v(" "),e("h2",{attrs:{id:"querybuilder-tostring-and-querybuilder-tosql-have-been-removed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#querybuilder-tostring-and-querybuilder-tosql-have-been-removed"}},[t._v("#")]),t._v(" QueryBuilder.toString and QueryBuilder.toSql have been removed")]),t._v(" "),e("p",[t._v("You can use "),e("code",[t._v("QueryBuilder.toKnexQuery().toSQL()")]),t._v(" instead.")]),t._v(" "),e("h2",{attrs:{id:"rewritten-typings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rewritten-typings"}},[t._v("#")]),t._v(" Rewritten typings")]),t._v(" "),e("p",[t._v("The typings have been completely rewritten in 2.0 and many of the types have changed names. By default you shouldn't get that many errors, but whenever you have explicitly defined an objection type for something other than "),e("code",[t._v("Model")]),t._v(", you may need to adjust that type. For example the "),e("code",[t._v("QueryBuilder")]),t._v(" no longer takes three generic arguments, but two.")]),t._v(" "),e("p",[t._v("For this breaking change we can't easily provide clear migration steps, because we don't know how much you have trusted the typescript type inference, and how much you have used explicit types.")]),t._v(" "),e("p",[t._v("One notable change is that you should no longer define your relations properties using "),e("code",[t._v("Partial<Model>")]),t._v(" or "),e("code",[t._v("Partial<Model>[]")]),t._v(". You can simply use "),e("code",[t._v("Model")]),t._v(" and "),e("code",[t._v("Model[]")]),t._v(" and methods like "),e("code",[t._v("insertGraph")]),t._v(" and "),e("code",[t._v("upsertGraph")]),t._v(" will just work.")])])}),[],!1,null,null,null);e.default=n.exports}}]);